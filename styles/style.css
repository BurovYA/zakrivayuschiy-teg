/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 375px;
  padding-block: 100px;
  color: var(--main-color);
  font-family: var(--font-family-main);
  font-size: 18px;
  background-color: var(--bg-color);
  background-image: var(--bg-image);
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;
  font-variation-settings: 'wght' var(--font-weight-content);
  min-inline-size: 320px;
  min-block-size: 100dvb;
}

.content-section {
  width: var(--content-width);
}

.content-decoration {
  border: 2px solid var(--main-color);
  background-color: var(--bg-color);
}

.button {
  position: relative;
  border: 2px solid var(--main-color);
  padding: 9px 17px;
  overflow: hidden;
  color: var(--main-color);
  font-family: var(--font-family-accent);
  font-size: 14px;
  background-color: var(--bg-color);
  transition:
    box-shadow 0.3s ease,
    color 1s ease;
  cursor: pointer;
  appearance: none;
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  box-shadow: 2px 2px 0 var(--main-color);
  outline: none;
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  width: 100%;
  height: 100%;
  background-color: var(--main-color);
  transition: transform 0.5s ease-in-out;
  transform: translate(-100%, 0);
}

.button:hover::before {
  transform: translate(0, 0);
}

.button__text {
  position: relative;
  z-index: 1;
  color: var(--button-text-color);
  mix-blend-mode: difference;
}

.button:hover .button__text {
  scale: 1;
}

.header {
  display: flex;
  flex-direction: column;
  justify-content: center;

  padding-block-start: clamp(120px, 114.3662px + 1.5023vw, 136px);
  padding-block-end: 25px;
}

.header__title {
  margin-block-end: 20px;
  font-family: var(--font-family-accent);
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
  text-align: center;
  text-transform: uppercase;
}

.header__subtitle {
  margin-block-end: 25px;
  font-family: var(--font-family-accent);
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
  text-align: center;
  text-transform: uppercase;
}

.header__theme-menu {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.theme-menu__list {
  padding-inline-start: 20px;
}

.theme-menu__item {
  font-size: 14px;
  line-height: 1;
}

.theme-menu__item:not(:last-child) {
  margin-block-end: 12px;
}

.theme-menu__button {
  position: relative;
  border: none;
  padding: 0;
  font-family: var(--font-family-accent);
  font-size: 14px;
  line-height: 1;
  text-transform: uppercase;
  background-color: transparent;
  transition: opacity ease 0.3s;
  cursor: pointer;
  appearance: none;
}

.theme-menu__button:disabled {
  cursor: default;
  pointer-events: none;
}

.theme-menu__button:disabled,
.theme-menu__button:hover {
  opacity: 0.6;
}

.theme-menu__button:disabled::before {
  content: '▶';
  position: absolute;
  left: -20px;
  animation: moving-arrow ease-in-out 0.5s infinite alternate;
}

.theme-menu__button:focus-visible,
.theme-menu__button:focus {
  outline: none;
  opacity: 0.6;
}

.theme-menu__button::after {
  content: '';
  position: absolute;
  bottom: -3px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--main-color);
  transition: scale ease 0.3s;
  transform-origin: top left;
  scale: 0 1;
}

.theme-menu__button:focus-visible:after {
  scale: 1 1;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
  margin-block-start: 100px;
}

.card {
  display: flex;
  flex-direction: column;
  max-width: 100%;
}

.card__title {
  border-block-end: 2px solid var(--main-color);
  padding-inline: 10px;
  padding-block: 4px 6px;
  font-size: 18px;
  font-variation-settings: 'wght' var(--font-weight-heading);
}

.card__image-wrapper {
  position: relative;
}

.card__image-label {
  position: absolute;
  top: 25px;
  right: clamp(13px, 8.7746px + 1.1268vw, 25px);
  z-index: 1;
  opacity: 0.5;
  font-family: var(--font-family-accent);
  font-size: 14px;
  text-shadow:
    -1px 0 var(--bg-color),
    0 1px var(--bg-color),
    1px 0 var(--bg-color),
    0 -1px var(--bg-color);
  mix-blend-mode: hard-light;
}

@supports (
  (text-stroke: 1px var(--bg-color)) or
    (-webkit-text-stroke: 1px var(--bg-color))
) {
  .card__image-label {
    text-shadow: none;
    -webkit-text-stroke: 1px var(--bg-color);
    text-stroke: 1px var(--bg-color);
  }
}

.card__image {
  display: block;
  max-width: 100%;
  object-fit: contain;
}

.card__content {
  display: flex;
  flex-direction: column;
  gap: 25px;
  border-block-start: 2px solid var(--main-color);
  padding: 25px;
}

.card__text {
  display: flex;
  flex-direction: column;
  gap: 25px;
}

.card__buttons {
  display: flex;
  justify-content: flex-end;
  gap: 6px;
}

.card__icon-button {
  box-sizing: border-box;
  height: 38px;
  margin: 0;
  border: 2px solid transparent;
  padding: 0;
  background-color: var(--bg-color);
  transition: border 0.3s ease;
  appearance: none;
}

.card__icon-button:focus {
  outline: none;
}

.card__icon-button:focus-visible {
  border: 2px solid var(--main-color);
}

.like-icon {
  cursor: pointer;
}

.like-icon .core {
  fill: transparent;
  transition: fill linear 0.3s;
  transition-delay: 0.03s;
}

.like-icon:hover .core,
.like-icon:active .core {
  transition-delay: 0s;
}

.like-icon:hover .core {
  fill: var(--main-color);
}

.like-icon:active .core,
.like-icon.is-liked .core {
  fill: var(--heart-fill-color);
}

.like-icon .main-body {
  fill: transparent;
  transition: fill linear 0.3s;
  transition-delay: 0s;
}

.like-icon:hover .main-body,
.like-icon:active .main-body {
  transition-delay: 0.05s;
}

.like-icon:hover .main-body {
  fill: var(--main-color);
}

.like-icon:active .main-body,
.like-icon.is-liked .main-body {
  fill: var(--heart-fill-color);
}

.like-icon:hover .contour {
  transition: fill linear 0.1s;
  transition-delay: 0s;
}

.like-icon.is-liked .contour {
  fill: var(--heart-fill-color);
  transition: fill linear 0.1s;
  transition-delay: 0.06s;
}

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: heart 0.3s ease-in alternate;
  animation-delay: 0.1s;
  animation-iteration-count: 1;
}

.like-icon .sparks {
  opacity: 0;
}

.like-icon.is-liked .sparks {
  animation: sparks 0.3s ease-in alternate;
  animation-delay: 0.3s;
  animation-iteration-count: 1;
}

.card__like-button {
  width: 130px;
  font-weight: 400;
  text-align: center;
}

.save-button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 15px 20px;
}

.save-button__svg {
  z-index: 1;
  width: 21px;
  color: var(--button-text-color);
  mix-blend-mode: difference;
}

.save-dialog {
  flex-direction: column;
  justify-content: stretch;
  gap: 30px;
  width: clamp(
    var(--dialog-min-width),
    calc(var(--dialog-min-width) + (100% - var(--dialog-min-width)) / 2),
    var(--dialog-max-width)
  );
  padding: 30px;
  color: var(--main-color);
  background-color: var(--bg-color);
}

.save-dialog[open] {
  display: flex;
}

.save-dialog::backdrop {
  opacity: 0.75;
  background-color: var(--dialog-backdrop-color);
}

.save-dialog__content {
  display: flex;
  align-items: center;
  gap: 30px;
}

.save-dialog__svg {
  flex: 0 0 39px;
}

.save-dialog__text {
  font-family: var(--font-family-accent);
  font-size: 14px;
  line-height: 1.5;
  text-transform: uppercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.filter-brightness {
  filter: brightness(50%);
}

.filter-contrast {
  filter: contrast(250%);
}

.filter-grayscale {
  filter: grayscale(80%);
}

.filter-hue-rotate {
  filter: hue-rotate(180deg);
}

.filter-invert {
  filter: invert(100%);
}

.filter-saturate {
  filter: saturate(300%);
}

.filter-sepia-blur {
  filter: sepia(0.7) blur(3px);
}

@media (width < 376px) {
  :root {
    --content-width: 100%;
  }

  .save-button {
    flex-direction: column;
  }

  .save-button__svg {
    width: 29px;
  }
}
